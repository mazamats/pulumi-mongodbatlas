// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class NetworkContainer extends pulumi.CustomResource {
    /**
     * Get an existing NetworkContainer resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NetworkContainerState, opts?: pulumi.CustomResourceOptions): NetworkContainer {
        return new NetworkContainer(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'mongodbatlas:index/networkContainer:NetworkContainer';

    /**
     * Returns true if the given object is an instance of NetworkContainer.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is NetworkContainer {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === NetworkContainer.__pulumiType;
    }

    public readonly atlasCidrBlock!: pulumi.Output<string>;
    public /*out*/ readonly azureSubscriptionId!: pulumi.Output<string>;
    public /*out*/ readonly containerId!: pulumi.Output<string>;
    public /*out*/ readonly gcpProjectId!: pulumi.Output<string>;
    public /*out*/ readonly networkName!: pulumi.Output<string>;
    public readonly projectId!: pulumi.Output<string>;
    public readonly providerName!: pulumi.Output<string | undefined>;
    public /*out*/ readonly provisioned!: pulumi.Output<boolean>;
    public readonly region!: pulumi.Output<string>;
    public readonly regionName!: pulumi.Output<string>;
    public /*out*/ readonly vnetName!: pulumi.Output<string>;
    public /*out*/ readonly vpcId!: pulumi.Output<string>;

    /**
     * Create a NetworkContainer resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NetworkContainerArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: NetworkContainerArgs | NetworkContainerState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state = argsOrState as NetworkContainerState | undefined;
            inputs["atlasCidrBlock"] = state ? state.atlasCidrBlock : undefined;
            inputs["azureSubscriptionId"] = state ? state.azureSubscriptionId : undefined;
            inputs["containerId"] = state ? state.containerId : undefined;
            inputs["gcpProjectId"] = state ? state.gcpProjectId : undefined;
            inputs["networkName"] = state ? state.networkName : undefined;
            inputs["projectId"] = state ? state.projectId : undefined;
            inputs["providerName"] = state ? state.providerName : undefined;
            inputs["provisioned"] = state ? state.provisioned : undefined;
            inputs["region"] = state ? state.region : undefined;
            inputs["regionName"] = state ? state.regionName : undefined;
            inputs["vnetName"] = state ? state.vnetName : undefined;
            inputs["vpcId"] = state ? state.vpcId : undefined;
        } else {
            const args = argsOrState as NetworkContainerArgs | undefined;
            if (!args || args.atlasCidrBlock === undefined) {
                throw new Error("Missing required property 'atlasCidrBlock'");
            }
            if (!args || args.projectId === undefined) {
                throw new Error("Missing required property 'projectId'");
            }
            inputs["atlasCidrBlock"] = args ? args.atlasCidrBlock : undefined;
            inputs["projectId"] = args ? args.projectId : undefined;
            inputs["providerName"] = args ? args.providerName : undefined;
            inputs["region"] = args ? args.region : undefined;
            inputs["regionName"] = args ? args.regionName : undefined;
            inputs["azureSubscriptionId"] = undefined /*out*/;
            inputs["containerId"] = undefined /*out*/;
            inputs["gcpProjectId"] = undefined /*out*/;
            inputs["networkName"] = undefined /*out*/;
            inputs["provisioned"] = undefined /*out*/;
            inputs["vnetName"] = undefined /*out*/;
            inputs["vpcId"] = undefined /*out*/;
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(NetworkContainer.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering NetworkContainer resources.
 */
export interface NetworkContainerState {
    readonly atlasCidrBlock?: pulumi.Input<string>;
    readonly azureSubscriptionId?: pulumi.Input<string>;
    readonly containerId?: pulumi.Input<string>;
    readonly gcpProjectId?: pulumi.Input<string>;
    readonly networkName?: pulumi.Input<string>;
    readonly projectId?: pulumi.Input<string>;
    readonly providerName?: pulumi.Input<string>;
    readonly provisioned?: pulumi.Input<boolean>;
    readonly region?: pulumi.Input<string>;
    readonly regionName?: pulumi.Input<string>;
    readonly vnetName?: pulumi.Input<string>;
    readonly vpcId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a NetworkContainer resource.
 */
export interface NetworkContainerArgs {
    readonly atlasCidrBlock: pulumi.Input<string>;
    readonly projectId: pulumi.Input<string>;
    readonly providerName?: pulumi.Input<string>;
    readonly region?: pulumi.Input<string>;
    readonly regionName?: pulumi.Input<string>;
}
