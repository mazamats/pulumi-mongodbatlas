// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class CloudProviderSnapshotRestoreJob extends pulumi.CustomResource {
    /**
     * Get an existing CloudProviderSnapshotRestoreJob resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CloudProviderSnapshotRestoreJobState, opts?: pulumi.CustomResourceOptions): CloudProviderSnapshotRestoreJob {
        return new CloudProviderSnapshotRestoreJob(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'mongodbatlas:index/cloudProviderSnapshotRestoreJob:CloudProviderSnapshotRestoreJob';

    /**
     * Returns true if the given object is an instance of CloudProviderSnapshotRestoreJob.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CloudProviderSnapshotRestoreJob {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CloudProviderSnapshotRestoreJob.__pulumiType;
    }

    public /*out*/ readonly cancelled!: pulumi.Output<boolean>;
    public readonly clusterName!: pulumi.Output<string>;
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    public readonly deliveryType!: pulumi.Output<outputs.CloudProviderSnapshotRestoreJobDeliveryType>;
    public /*out*/ readonly deliveryUrls!: pulumi.Output<string[]>;
    public /*out*/ readonly expired!: pulumi.Output<boolean>;
    public /*out*/ readonly expiresAt!: pulumi.Output<string>;
    public /*out*/ readonly finishedAt!: pulumi.Output<string>;
    public readonly projectId!: pulumi.Output<string>;
    public readonly snapshotId!: pulumi.Output<string>;
    public /*out*/ readonly snapshotRestoreJobId!: pulumi.Output<string>;
    public /*out*/ readonly timestamp!: pulumi.Output<string>;

    /**
     * Create a CloudProviderSnapshotRestoreJob resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CloudProviderSnapshotRestoreJobArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CloudProviderSnapshotRestoreJobArgs | CloudProviderSnapshotRestoreJobState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state = argsOrState as CloudProviderSnapshotRestoreJobState | undefined;
            inputs["cancelled"] = state ? state.cancelled : undefined;
            inputs["clusterName"] = state ? state.clusterName : undefined;
            inputs["createdAt"] = state ? state.createdAt : undefined;
            inputs["deliveryType"] = state ? state.deliveryType : undefined;
            inputs["deliveryUrls"] = state ? state.deliveryUrls : undefined;
            inputs["expired"] = state ? state.expired : undefined;
            inputs["expiresAt"] = state ? state.expiresAt : undefined;
            inputs["finishedAt"] = state ? state.finishedAt : undefined;
            inputs["projectId"] = state ? state.projectId : undefined;
            inputs["snapshotId"] = state ? state.snapshotId : undefined;
            inputs["snapshotRestoreJobId"] = state ? state.snapshotRestoreJobId : undefined;
            inputs["timestamp"] = state ? state.timestamp : undefined;
        } else {
            const args = argsOrState as CloudProviderSnapshotRestoreJobArgs | undefined;
            if (!args || args.clusterName === undefined) {
                throw new Error("Missing required property 'clusterName'");
            }
            if (!args || args.deliveryType === undefined) {
                throw new Error("Missing required property 'deliveryType'");
            }
            if (!args || args.projectId === undefined) {
                throw new Error("Missing required property 'projectId'");
            }
            if (!args || args.snapshotId === undefined) {
                throw new Error("Missing required property 'snapshotId'");
            }
            inputs["clusterName"] = args ? args.clusterName : undefined;
            inputs["deliveryType"] = args ? args.deliveryType : undefined;
            inputs["projectId"] = args ? args.projectId : undefined;
            inputs["snapshotId"] = args ? args.snapshotId : undefined;
            inputs["cancelled"] = undefined /*out*/;
            inputs["createdAt"] = undefined /*out*/;
            inputs["deliveryUrls"] = undefined /*out*/;
            inputs["expired"] = undefined /*out*/;
            inputs["expiresAt"] = undefined /*out*/;
            inputs["finishedAt"] = undefined /*out*/;
            inputs["snapshotRestoreJobId"] = undefined /*out*/;
            inputs["timestamp"] = undefined /*out*/;
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(CloudProviderSnapshotRestoreJob.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering CloudProviderSnapshotRestoreJob resources.
 */
export interface CloudProviderSnapshotRestoreJobState {
    readonly cancelled?: pulumi.Input<boolean>;
    readonly clusterName?: pulumi.Input<string>;
    readonly createdAt?: pulumi.Input<string>;
    readonly deliveryType?: pulumi.Input<inputs.CloudProviderSnapshotRestoreJobDeliveryType>;
    readonly deliveryUrls?: pulumi.Input<pulumi.Input<string>[]>;
    readonly expired?: pulumi.Input<boolean>;
    readonly expiresAt?: pulumi.Input<string>;
    readonly finishedAt?: pulumi.Input<string>;
    readonly projectId?: pulumi.Input<string>;
    readonly snapshotId?: pulumi.Input<string>;
    readonly snapshotRestoreJobId?: pulumi.Input<string>;
    readonly timestamp?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a CloudProviderSnapshotRestoreJob resource.
 */
export interface CloudProviderSnapshotRestoreJobArgs {
    readonly clusterName: pulumi.Input<string>;
    readonly deliveryType: pulumi.Input<inputs.CloudProviderSnapshotRestoreJobDeliveryType>;
    readonly projectId: pulumi.Input<string>;
    readonly snapshotId: pulumi.Input<string>;
}
